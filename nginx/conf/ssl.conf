
ssl_certificate     cert/default.crt;                   # 默认证书
ssl_certificate_key cert/default.key;                   # 默认密钥
ssl_dhparam         cert/dhparam.pem;                   # 密钥交换

# 生成一个默认证书
# openssl req -newkey rsa:2048 -nodes -keyout default.key -x509 -days 3650 -out default.crt

# 生成迪菲赫尔曼密钥（大概要几分钟）
# openssl dhparam -out dhparam.pem 2048

# Nginx服务器搭建SSL/TLS(https+http/2)：
# https://www.awaimai.com/126.html

# HTTPS安全与兼容性配置指南
# https://blog.myssl.com/https-security-compatibility-best-practices/

ssl_session_cache   shared:SSL:10m;                     # 配置共享会话缓存大小
ssl_session_timeout 10m;                                # 配置会话超时时间：10分钟
keepalive_timeout   75;                                 # 设置长连接

ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;            # 使用安全协议
ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256::!MD5; # 加密算法
ssl_prefer_server_ciphers on;                           # 设置服务器加密方式优先于客户端

#add_header Strict-Transport-Security max-age=31536000; # 使用HSTS策略：强制浏览器总是使用HTTPS连接
add_header Strict-Transport-Security max-age=0;         # 禁用HSTS策略

#add_header X-Frame-Options DENY;                       # 减少点击劫持
add_header X-Content-Type-Options nosniff;              # 禁止服务器自动解析资源类型
add_header X-Xss-Protection 1;                          # 防XSS攻击

# 动态加载证书和秘钥以及OCSP
ssl_certificate_by_lua_file _ssl.lua;
